#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_LIS3DH.h>
#include <Adafruit_MQTT.h>
#include <Adafruit_MQTT_Client.h>
#include <ESP8266WiFi.h>

// Replace with your Wi-Fi credentials
#define WLAN_SSID       ""
#define WLAN_PASS       ""

// Adafruit.io setup
#define AIO_SERVER      "io.adafruit.com"
#define AIO_SERVERPORT  1883
#define AIO_USERNAME    "PawSecure"
#define AIO_KEY         ""
#define AIO_GROUP       ""

// Create an ESP8266 WiFiClient class to connect to the MQTT server.
WiFiClient client;

// Setup the MQTT client class by passing in the WiFi client and MQTT server and login details.
Adafruit_MQTT_Client mqtt(&client, AIO_SERVER, AIO_SERVERPORT, AIO_USERNAME, AIO_KEY);

// Accelerometer setup
Adafruit_LIS3DH lis = Adafruit_LIS3DH();

/****************************** Feeds ***************************************/
Adafruit_MQTT_Publish accelValue = Adafruit_MQTT_Publish(&mqtt, AIO_USERNAME "/feeds/" AIO_GROUP "accelvalue");

void setup() {
  Serial.begin(115200);
  delay(10);

  // Connect to Wi-Fi
  Serial.println("Connecting to WiFi");
  WiFi.begin(WLAN_SSID, WLAN_PASS);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected");

  // Setup MQTT
  mqtt.subscribe(&ledBrightness);

  // Setup Accelerometer
  if (!lis.begin(0x18)) { // Change the I2C address based on your module
    Serial.println("Could not find a valid LIS3DH sensor, check wiring!");
    while (1);
  }
  lis.setRange(LIS3DH_RANGE_4_G);

  Serial.println("Setup complete");
}

void loop() {
  MQTT_connect();

  // Read accelerometer data
  sensors_event_t event;
  lis.getEvent(&event);

  // Publish accelerometer data to Adafruit.io
  if (accelValue.publish(event.acceleration.x)) {
    Serial.println("Accelerometer value published");
  } else {
    Serial.println("Failed to publish accelerometer value");
  }

  delay(1000);
}

void MQTT_connect() {
  int8_t ret;

  if (mqtt.connected()) {
    return;
  }

  Serial.print("Connecting to MQTT... ");

  uint8_t retries = 3;
  while ((ret = mqtt.connect()) != 0) {
    Serial.println(mqtt.connectErrorString(ret));
    Serial.println("Retrying MQTT connection in 5 seconds...");
    mqtt.disconnect();
    delay(5000);
    retries--;
    if (retries == 0) {
      while (1);
    }
  }
  Serial.println("MQTT Connected!");
}
